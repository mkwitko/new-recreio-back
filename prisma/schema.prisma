generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model app_call_list {
    id              Int       @id @default(autoincrement())
    uti_servico     String?   @db.VarChar(255)
    hor_horainicial String?   @db.VarChar(255)
    hor_horafinal   String?   @db.VarChar(255)
    date            DateTime? @db.Date
    created         DateTime? @default(now()) @db.Timestamp(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model app_config {
    renew_service_start         DateTime @db.Date
    renew_service_end           DateTime @db.Date
    renew_contract_start        Int      @default(1)
    kiosk_reservation_yesterday Int      @default(0) @db.TinyInt
    kiosk_reservation_time      DateTime @default(dbgenerated("'06:00:00'")) @db.Time(0)
    kiosk_withdraw_key          DateTime @default(dbgenerated("'10:00:00'")) @db.Time(0)
    kiosk_chance_time           DateTime @default(dbgenerated("'10:00:00'")) @db.Time(0)
    kiosk_chance_close          DateTime @default(dbgenerated("'10:00:00'")) @db.Time(0)
    kiosk_reopening_time        DateTime @default(dbgenerated("'10:05:00'")) @db.Time(0)
    kiosk_closing_time          DateTime @default(dbgenerated("'18:00:00'")) @db.Time(0)
    waitlist_contract_time      Int      @default(24)
    map_refresh_seconds         Int?     @default(10)
    push_delay                  Int      @default(1)
    push_welcome                String?  @db.Text
    points_to_price             Float?
    price_to_points             Float?

    @@ignore
}

model app_equipaments {
    id                       Int                        @id @default(autoincrement())
    name                     String                     @db.VarChar(255)
    image                    String                     @db.VarChar(255)
    numbering                Int
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    description              String?                    @db.Text
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    app_training_equipaments app_training_equipaments[]
}

model app_exercise {
    id                       Int                        @id @default(autoincrement())
    image                    String                     @db.VarChar(255)
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    app_exercise_description app_exercise_description[]
}

model app_exercise_description {
    id_exercise  Int
    id_language  Int
    title        String?      @db.VarChar(255)
    description  String?      @db.Text
    playlist     String?      @db.VarChar(255)
    app_exercise app_exercise @relation(fields: [id_exercise], references: [id], onDelete: Cascade, map: "fk_app_exercise_description_exercise")
    ez_language  ez_language  @relation(fields: [id_language], references: [id], map: "fk_app_exercise_description_language")

    @@id([id_exercise, id_language])
    @@index([id_exercise], map: "id_exercise")
    @@index([id_language], map: "id_language")
}

model app_faq {
    id                  Int                   @id @default(autoincrement())
    id_company          Int
    order_by            Int                   @default(0)
    status              Boolean?              @default(false)
    created             DateTime              @default(now()) @db.Timestamp(0)
    updated             DateTime?             @db.Timestamp(0)
    deleted             DateTime?             @db.Timestamp(0)
    ez_company          ez_company            @relation(fields: [id_company], references: [id], map: "fk_app_faq_company")
    app_faq_description app_faq_description[]

    @@index([id_company], map: "id_company")
}

model app_faq_description {
    id_faq      Int
    id_language Int
    title       String?     @db.VarChar(255)
    text        String?     @db.Text
    app_faq     app_faq     @relation(fields: [id_faq], references: [id], onDelete: Cascade, map: "fk_app_faq_description_faq")
    ez_language ez_language @relation(fields: [id_language], references: [id], map: "fk_app_faq_description_language")

    @@id([id_faq, id_language])
    @@index([id_faq], map: "id_faq")
    @@index([id_language], map: "id_language")
}

model app_holiday {
    id          Int         @id @default(autoincrement())
    id_company  Int
    id_language Int
    title       String      @db.VarChar(255)
    date        DateTime    @db.Date
    order_by    Int         @default(0)
    status      Boolean     @default(true)
    created     DateTime    @default(now()) @db.Timestamp(0)
    updated     DateTime?   @db.Timestamp(0)
    ez_company  ez_company  @relation(fields: [id_company], references: [id], map: "fk_APP_holiday_company")
    ez_language ez_language @relation(fields: [id_language], references: [id], map: "fk_APP_language_company")

    @@unique([date, id_language], map: "unique_date")
    @@index([id_company], map: "fk_APP_holiday_company_idx")
    @@index([id_language], map: "fk_APP_holiday_language_idx")
}

model app_reserve_place {
    id                Int      @id @default(autoincrement())
    id_ju_place       String?  @db.VarChar(255)
    id_ju_transaction String?  @db.VarChar(255)
    id_ju_user        String?  @db.VarChar(255)
    sequency          String?  @db.VarChar(2)
    token             String   @db.VarChar(32)
    price             Decimal? @default(0.00) @db.Decimal(7, 2)
    info              String?  @db.Text
    status            String?  @default("pendente") @db.VarChar(255)
    created           DateTime @default(now()) @db.DateTime(0)

    @@index([id_ju_place], map: "id_ju")
    @@index([id_ju_transaction], map: "id_ju_transaction")
    @@index([id_ju_user], map: "id_user_ju")
}

model app_service_category {
    id                               Int                                @id @default(autoincrement())
    id_company                       Int
    status                           Boolean?                           @default(false)
    reservable                       Boolean?                           @default(false)
    logic                            String?                            @db.VarChar(255)
    created                          DateTime                           @default(now()) @db.Timestamp(0)
    updated                          DateTime?                          @db.Timestamp(0)
    deleted                          DateTime?                          @db.Timestamp(0)
    ez_company                       ez_company                         @relation(fields: [id_company], references: [id], map: "fk_app_service_category_company")
    app_service_category_description app_service_category_description[]
    app_service_category_gallery     app_service_category_gallery[]
    app_service_category_ju          app_service_category_ju[]

    @@index([id_company], map: "id_company")
}

model app_service_category_description {
    id_service_category  Int
    id_language          Int
    title                String?              @db.VarChar(255)
    text                 String?              @db.Text
    terms                String?              @db.Text
    slug                 String               @db.VarChar(255)
    ez_language          ez_language          @relation(fields: [id_language], references: [id], map: "fk_app_service_category_description_language")
    app_service_category app_service_category @relation(fields: [id_service_category], references: [id], onDelete: Cascade, map: "fk_app_service_category_description_service_category")

    @@id([id_service_category, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_service_category], map: "id_service_category")
}

model app_service_category_gallery {
    id                   Int                  @id @default(autoincrement())
    id_service_category  Int
    file                 String               @db.VarChar(255)
    subtitle             String?              @db.VarChar(255)
    order_by             Int?
    highlighted          Boolean?             @default(false)
    created              DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated              Int?
    deleted              Int?
    app_service_category app_service_category @relation(fields: [id_service_category], references: [id], onDelete: Cascade, map: "app_service_category_gallery_ibfk_1")

    @@index([id_service_category], map: "id_service_category")
}

model app_service_category_ju {
    id_service_category  Int
    id_ju_category       Int
    app_service_category app_service_category @relation(fields: [id_service_category], references: [id], onDelete: Cascade, map: "fk_service_category")

    @@id([id_service_category, id_ju_category])
}

model app_service_waitlist {
    id                          Int                           @id @default(autoincrement())
    ju_associado                String                        @db.VarChar(30)
    ju_sequencia                String                        @db.VarChar(2)
    ju_associado_nome           String                        @db.VarChar(255)
    ju_servico_id               Int
    status                      Int                           @default(1) @db.TinyInt
    notified                    DateTime?                     @db.DateTime(0)
    created                     DateTime                      @default(now()) @db.Timestamp(0)
    deleted                     DateTime?                     @db.Timestamp(0)
    app_service_waitlist_report app_service_waitlist_report[]

    @@index([ju_associado], map: "ju_associado")
    @@index([ju_sequencia], map: "ju_sequencia")
    @@index([ju_servico_id], map: "ju_servico")
}

model app_service_waitlist_report {
    id                   Int                  @id @default(autoincrement())
    id_waitlist          Int
    reason               String?              @db.VarChar(255)
    removed              DateTime             @default(now()) @db.Timestamp(0)
    app_service_waitlist app_service_waitlist @relation(fields: [id_waitlist], references: [id], onDelete: Cascade, map: "fk_app_service_waitlist_report")

    @@index([id_waitlist], map: "fk_app_service_waitlist_report")
}

model app_session {
    session_id    String  @id @default("0") @db.VarChar(40)
    ip_address    String  @default("0") @db.VarChar(45)
    user_agent    String  @db.VarChar(255)
    last_activity Int     @default(0) @db.UnsignedInt
    user          String? @unique @db.VarChar(8)
    user_data     String? @db.Text()

    @@index([last_activity], map: "last_activity_idx")
}

model app_ticket {
    id                Int          @id @default(autoincrement())
    id_visitor        Int?
    id_ju_event       String?      @db.VarChar(255)
    id_ju_transaction String?      @db.VarChar(255)
    id_ju_user        String?      @db.VarChar(255)
    sequency          String?      @db.VarChar(2)
    token             String       @db.VarChar(32)
    price             Decimal?     @default(0.00) @db.Decimal(7, 2)
    info              String?      @db.Text
    status            String?      @default("pendente") @db.VarChar(255)
    created           DateTime     @default(now()) @db.DateTime(0)
    app_visitor       app_visitor? @relation(fields: [id_visitor], references: [id], onDelete: Restrict, map: "app_ticket_ibfk_1")

    @@index([id_ju_event], map: "id_ju")
    @@index([id_ju_transaction], map: "id_ju_transaction")
    @@index([id_ju_user], map: "id_user_ju")
    @@index([id_visitor], map: "id_visitor")
}

model app_ticket_user {
    id             Int       @id @default(autoincrement())
    name           String    @db.VarChar(255)
    value          String    @db.VarChar(255)
    visitor        Int       @default(0) @db.TinyInt
    token          String    @db.VarChar(255)
    id_transaction String?   @db.VarChar(255)
    id_user        String    @db.VarChar(6)
    id_sequency    String    @db.VarChar(2)
    id_event       Int
    order_by       Int
    status         Int       @default(1)
    created        DateTime  @default(now()) @db.Timestamp(0)
    updated        DateTime? @db.Timestamp(0)
    deleted        DateTime? @db.Timestamp(0)
}

model app_training {
    id                   Int                    @id @default(autoincrement())
    name                 String?                @db.VarChar(250)
    deleted              DateTime?              @db.DateTime(0)
    associado            String?                @db.VarChar(255)
    sequencia            String?                @db.VarChar(20)
    app_training_detail  app_training_detail[]
    app_training_history app_training_history[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model app_training_client_detail {
    associado  String @db.VarChar(255)
    sequencia  String @db.VarChar(20)
    obs        String @db.Text
    frequency  String @db.VarChar(75)
    experience Int    @db.TinyInt

    @@ignore
}

model app_training_detail {
    id                       Int                        @id @default(autoincrement())
    id_training              Int
    id_exercice              Int
    series                   String?                    @db.VarChar(20)
    weight                   String?                    @db.VarChar(20)
    description              String                     @db.Text
    sequence                 Int?
    repetitions              String?                    @db.VarChar(20)
    break                    String?                    @db.VarChar(20)
    equipament               String?                    @db.VarChar(20)
    deleted                  DateTime?                  @db.DateTime(0)
    app_training_exercice    app_training_exercice      @relation(fields: [id_exercice], references: [id], onUpdate: Restrict, map: "fk_id_exercice")
    app_training             app_training               @relation(fields: [id_training], references: [id], onUpdate: Restrict, map: "fk_id_training")
    app_training_equipaments app_training_equipaments[]
    app_training_user        app_training_user[]

    @@index([id_exercice], map: "fk_id_exercice")
    @@index([id_training], map: "fk_id_training")
}

model app_training_equipaments {
    id                  Int                 @id @default(autoincrement())
    id_training_detail  Int
    id_equipament       Int
    app_equipaments     app_equipaments     @relation(fields: [id_equipament], references: [id], map: "fk_app_id_equipament")
    app_training_detail app_training_detail @relation(fields: [id_training_detail], references: [id], onDelete: Cascade, map: "fk_app_id_training_detail")

    @@index([id_equipament], map: "id_equipament")
    @@index([id_training_detail], map: "id_training_detail")
}

model app_training_exercice {
    id                  Int                   @id @default(autoincrement())
    name                String?               @db.VarChar(250)
    description         String?               @db.Text
    url_video           String?               @db.VarChar(250)
    image               String?               @db.VarChar(250)
    order_by            Int
    deleted             DateTime?             @db.DateTime(0)
    app_training_detail app_training_detail[]
}

model app_training_history {
    id           Int          @id @default(autoincrement())
    id_training  Int
    associado    String       @db.VarChar(255)
    sequencia    String       @db.VarChar(2)
    start        DateTime?    @db.DateTime(0)
    end          DateTime?    @db.DateTime(0)
    deleted      DateTime?    @db.DateTime(0)
    app_training app_training @relation(fields: [id_training], references: [id], onUpdate: Restrict, map: "app_training_history_ibfk_1")

    @@index([id_training], map: "id_training_user")
}

model app_training_user {
    id                  Int                 @id @default(autoincrement())
    id_training_detail  Int
    id_exercice         Int
    associado           String              @db.VarChar(255)
    sequencia           String?             @db.VarChar(20)
    order_by            String?             @db.VarChar(20)
    series              String?             @db.VarChar(20)
    weight              String?             @db.VarChar(20)
    sequence            String?             @db.VarChar(20)
    repetitions         String?             @db.VarChar(20)
    break               String?             @db.VarChar(20)
    equipament          String?             @db.VarChar(20)
    deleted             DateTime?           @db.DateTime(0)
    app_training_detail app_training_detail @relation(fields: [id_training_detail], references: [id], onUpdate: Restrict, map: "fk_id_training_detail")

    @@index([id_training_detail], map: "fk_id_training_detail")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model app_update {
    version String @db.VarChar(10)

    @@ignore
}

model app_user {
    experience                 Int?                         @db.TinyInt
    frequency                  String?                      @db.VarChar(75)
    id                         String                       @unique @db.VarChar(255)
    id_profession              Int?
    nome                       String?                      @db.VarChar(255)
    dtnascimento               DateTime?                    @db.DateTime(0)
    sequency                   String                       @default("00") @db.Char(2)
    email                      String                       @db.VarChar(255)
    instructor                 Int                          @default(0) @db.TinyInt
    password                   String                       @db.VarChar(255)
    udid                       String?                      @db.VarChar(255)
    retrieve_hash              String?                      @db.VarChar(255)
    permissions                String?                      @db.Text
    created                    DateTime                     @default(now()) @db.DateTime(0)
    updated                    DateTime?                    @db.DateTime(0)
    already_logged             Int?                         @db.TinyInt
    description                String?                      @db.Text
    site_notification_receiver site_notification_receiver[]

    @@id([id, sequency])
    @@unique([id, sequency])
}

model app_visitor {
    id         Int          @id @default(autoincrement())
    cpf        String       @db.VarChar(255)
    name       String       @db.VarChar(255)
    surname    String?      @db.VarChar(255)
    email      String       @db.VarChar(255)
    zipcode    String?      @db.VarChar(255)
    street     String?      @db.VarChar(255)
    number     String?      @db.VarChar(255)
    district   String?      @db.VarChar(255)
    uf         String?      @db.VarChar(255)
    city       String?      @db.VarChar(255)
    created    DateTime     @default(now()) @db.DateTime(0)
    app_ticket app_ticket[]
}

model app_waitlist {
    id                     Int                   @id @default(autoincrement())
    ju_associado           String                @db.VarChar(30)
    ju_sequencia           String                @db.VarChar(2)
    ju_associado_nome      String                @db.VarChar(255)
    ju_servico_id          Int
    ju_servico_nome        String                @db.VarChar(255)
    ju_horario_id          Int
    ju_horario_diadasemana String                @db.VarChar(255)
    ju_horario_inicial     String                @db.Char(4)
    ju_horario_final       String                @db.Char(4)
    notified               DateTime?             @db.DateTime(0)
    created                DateTime              @default(now()) @db.Timestamp(0)
    deleted                DateTime?             @db.Timestamp(0)
    app_waitlist_report    app_waitlist_report[]

    @@index([ju_associado], map: "ju_associado")
    @@index([ju_horario_id], map: "ju_horario")
    @@index([ju_sequencia], map: "ju_sequencia")
    @@index([ju_servico_id], map: "ju_servico")
}

model app_waitlist_report {
    id           Int          @id @default(autoincrement())
    id_waitlist  Int
    reason       String?      @db.VarChar(255)
    removed      DateTime     @default(now()) @db.Timestamp(0)
    app_waitlist app_waitlist @relation(fields: [id_waitlist], references: [id], onDelete: Cascade, map: "fk_app_waitlist_report_waitlist")

    @@index([id_waitlist], map: "fk_app_waitlist_report_waitlist")
}

model blog_category {
    id                        Int                         @id @default(autoincrement())
    id_company                Int
    order_by                  Int?                        @default(0)
    status                    Boolean                     @default(false)
    image                     String?                     @db.VarChar(255)
    created                   DateTime                    @default(now()) @db.Timestamp(0)
    updated                   DateTime?                   @db.Timestamp(0)
    deleted                   DateTime?                   @db.Timestamp(0)
    ez_company                ez_company                  @relation(fields: [id_company], references: [id], onUpdate: Restrict, map: "fk_category_company")
    blog_category_description blog_category_description[]
    blog_post                 blog_post[]

    @@index([id], map: "id")
    @@index([id_company], map: "id_company")
}

model blog_category_description {
    id_category      Int
    id_language      Int
    slug             String        @db.VarChar(255)
    title            String        @db.VarChar(255)
    meta_keywords    String        @db.VarChar(255)
    meta_description String        @db.VarChar(255)
    blog_category    blog_category @relation(fields: [id_category], references: [id], onDelete: Cascade, map: "fk_category_description_id")
    ez_language      ez_language   @relation(fields: [id_language], references: [id], onUpdate: Restrict, map: "fk_category_description_language")

    @@id([id_category, id_language])
    @@index([id_category], map: "id_category")
    @@index([id_language], map: "id_language")
}

model blog_post {
    id                    Int                     @id @default(autoincrement())
    id_company            Int                     @default(1)
    id_category           Int
    date                  DateTime?               @db.Timestamp(0)
    status                Int?                    @default(0) @db.TinyInt
    num_views             Int?                    @default(0)
    created               DateTime                @default(now()) @db.Timestamp(0)
    updated               DateTime?               @db.Timestamp(0)
    deleted               DateTime?               @db.Timestamp(0)
    ez_company            ez_company              @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "blog_post_ibfk_1")
    blog_category         blog_category           @relation(fields: [id_category], references: [id], onDelete: NoAction, map: "blog_post_ibfk_2")
    blog_post_description blog_post_description[]
    blog_post_gallery     blog_post_gallery[]
    blog_post_video       blog_post_video[]

    @@index([id_category], map: "id_category")
    @@index([id_company], map: "id_company")
}

model blog_post_description {
    id_post          Int
    id_language      Int
    slug             String    @db.Text
    title            String    @db.VarChar(255)
    subtitle         String?   @db.VarChar(255)
    text             String?   @db.Text
    meta_keywords    String?   @db.VarChar(255)
    meta_description String?   @db.VarChar(255)
    blog_post        blog_post @relation(fields: [id_post], references: [id], onDelete: Cascade, map: "blog_post_description_ibfk_1")

    @@id([id_post, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_post], map: "id_post")
}

model blog_post_gallery {
    id          Int       @id @default(autoincrement())
    id_post     Int
    file        String    @db.VarChar(255)
    subtitle    String?   @db.VarChar(255)
    order_by    Int?
    highlighted Boolean?  @default(false)
    created     DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated     Int?
    deleted     Int?
    blog_post   blog_post @relation(fields: [id_post], references: [id], onDelete: Cascade, map: "blog_post_gallery_ibfk_1")

    @@index([id_post], map: "id_post")
}

model blog_post_video {
    id          Int         @id @default(autoincrement())
    id_post     Int
    id_language Int
    title       String?     @db.VarChar(255)
    link        String      @db.VarChar(255)
    ez_language ez_language @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "blog_post_video_ibfk_1")
    blog_post   blog_post   @relation(fields: [id_post], references: [id], onDelete: Cascade, map: "blog_post_video_ibfk_2")

    @@index([id_language], map: "id_language")
    @@index([id_post], map: "id_post")
}

model ez_city {
    id       Int       @id @default(autoincrement())
    id_state Int
    name     String    @db.VarChar(255)
    created  DateTime  @default(now()) @db.Timestamp(0)
    updated  DateTime? @db.Timestamp(0)
    deleted  DateTime? @db.Timestamp(0)
    ez_state ez_state  @relation(fields: [id_state], references: [id], map: "fk_city_state")

    @@index([id_state], map: "state")
}

model ez_company {
    id                     Int                      @id @default(autoincrement())
    company_name           String                   @db.VarChar(255)
    fantasy_name           String                   @db.VarChar(255)
    favicon                String?                  @db.VarChar(255)
    image                  String?                  @db.VarChar(255)
    address                String?                  @db.VarChar(255)
    number                 String?                  @db.VarChar(255)
    complement             String?                  @db.VarChar(255)
    district               String?                  @db.VarChar(255)
    city                   String?                  @db.VarChar(255)
    state                  String?                  @db.VarChar(255)
    id_country             Int?
    zipcode                String?                  @db.VarChar(255)
    email                  String?                  @db.VarChar(255)
    phone                  String?                  @db.VarChar(255)
    sac                    String?                  @db.VarChar(255)
    lat_lng                Unsupported("point")?
    domain                 String?                  @db.VarChar(255)
    slug                   String?                  @db.VarChar(255)
    google_tag_manager     String?                  @db.VarChar(255)
    language_main          Int?                     @default(1)
    languages_site         String?                  @default("1") @db.VarChar(255)
    active_site            Boolean                  @default(false)
    status                 Boolean                  @default(false)
    created                DateTime                 @default(now()) @db.Timestamp(0)
    updated                DateTime?                @db.Timestamp(0)
    deleted                DateTime?                @db.Timestamp(0)
    app_faq                app_faq[]
    app_holiday            app_holiday[]
    app_service_category   app_service_category[]
    blog_category          blog_category[]
    blog_post              blog_post[]
    ez_country             ez_country?              @relation(fields: [id_country], references: [id], onDelete: Restrict, map: "fk_info_country")
    ez_language            ez_language?             @relation(fields: [language_main], references: [id], onDelete: Restrict, map: "fk_info_language")
    ez_company_description ez_company_description[]
    ez_company_user        ez_company_user[]
    ez_module_company      ez_module_company[]
    ez_route               ez_route[]
    site_album             site_album[]
    site_album_category    site_album_category[]
    site_associate         site_associate[]
    site_banner            site_banner[]
    site_combo             site_combo[]
    site_common_content    site_common_content[]
    site_contact           site_contact[]
    site_content           site_content[]
    site_event             site_event[]
    site_headquarter       site_headquarter[]
    site_highlight         site_highlight[]
    site_interest          site_interest[]
    site_magazine          site_magazine[]
    site_modal             site_modal[]
    site_newsletter        site_newsletter[]
    site_notification      site_notification[]
    site_partner           site_partner[]
    site_partner_discount  site_partner_discount[]
    site_place             site_place[]
    site_place_request     site_place_request[]
    site_profile           site_profile[]
    site_sponsor           site_sponsor[]
    site_subject           site_subject[]
    site_time_suggestion   site_time_suggestion[]

    @@index([id_country], map: "id_country")
    @@index([language_main], map: "language_main")
}

model ez_company_description {
    id_company       Int
    id_language      Int
    facebook         String?     @db.VarChar(255)
    youtube          String?     @db.VarChar(255)
    twitter          String?     @db.VarChar(255)
    instagram        String?     @db.VarChar(255)
    google           String?     @db.VarChar(255)
    pinterest        String?     @db.VarChar(255)
    soundcloud       String?     @db.VarChar(255)
    flickr           String?     @db.VarChar(255)
    meta_webmaster   String?     @db.VarChar(255)
    meta_title       String?     @db.VarChar(255)
    meta_description String?     @db.VarChar(255)
    meta_keywords    String?     @db.VarChar(255)
    ez_company       ez_company  @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "fk_company_description_company")
    ez_language      ez_language @relation(fields: [id_language], references: [id], map: "fk_company_description_language")

    @@id([id_company, id_language])
    @@index([id_company], map: "id_company")
    @@index([id_language], map: "id_language")
}

model ez_company_user {
    id_user    Int
    id_company Int
    default    Boolean?
    permission String?    @db.Text
    ez_company ez_company @relation(fields: [id_company], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_company_user_company")
    ez_user    ez_user    @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_company_user_user")

    @@id([id_user, id_company])
    @@index([id_company], map: "id_company")
    @@index([id_user], map: "id_user")
}

model ez_continent {
    id                       Int                        @id @default(autoincrement())
    code                     String                     @db.Char(2)
    status                   Boolean                    @default(true)
    ez_continent_description ez_continent_description[]
    ez_country               ez_country[]
}

model ez_continent_description {
    id_continent Int
    id_language  Int
    name         String?      @db.VarChar(255)
    slug         String?      @db.VarChar(255)
    ez_continent ez_continent @relation(fields: [id_continent], references: [id], onDelete: Cascade, map: "fk_continent_description_continent")
    ez_language  ez_language  @relation(fields: [id_language], references: [id], map: "fk_continent_description_language")

    @@id([id_continent, id_language])
    @@index([id_language], map: "fk_continent_language")
}

model ez_country {
    id                     Int                      @id @default(autoincrement())
    id_continent           Int
    code                   String                   @db.Char(2)
    ez_company             ez_company[]
    ez_continent           ez_continent             @relation(fields: [id_continent], references: [id], onUpdate: Restrict, map: "fk_country_continent")
    ez_country_description ez_country_description[]

    @@index([id_continent], map: "id_continent")
}

model ez_country_description {
    id_country  Int
    id_language Int
    name        String      @db.VarChar(255)
    slug        String      @db.VarChar(255)
    ez_country  ez_country  @relation(fields: [id_country], references: [id], onDelete: Cascade, map: "fk_country_description_country")
    ez_language ez_language @relation(fields: [id_language], references: [id], map: "fk_country_description_language")

    @@id([id_country, id_language])
    @@index([id_language], map: "fk_country_language")
}

model ez_language {
    id                                Int                                 @id @default(autoincrement())
    name                              String                              @db.VarChar(32)
    code                              String                              @db.VarChar(5)
    time_zone                         String                              @db.VarChar(50)
    lc_time_names                     String                              @db.VarChar(50)
    image                             String                              @db.VarChar(64)
    directory                         String                              @db.VarChar(32)
    order                             Int                                 @default(0)
    status                            Boolean
    site                              Boolean                             @default(true)
    created                           DateTime                            @default(now()) @db.Timestamp(0)
    updated                           DateTime?                           @db.Timestamp(0)
    deleted                           DateTime?                           @db.Timestamp(0)
    app_exercise_description          app_exercise_description[]
    app_faq_description               app_faq_description[]
    app_holiday                       app_holiday[]
    app_service_category_description  app_service_category_description[]
    blog_category_description         blog_category_description[]
    blog_post_video                   blog_post_video[]
    ez_company                        ez_company[]
    ez_company_description            ez_company_description[]
    ez_continent_description          ez_continent_description[]
    ez_country_description            ez_country_description[]
    ez_module_description             ez_module_description[]
    ez_route_description              ez_route_description[]
    site_album_category_description   site_album_category_description[]
    site_album_description            site_album_description[]
    site_banner_description           site_banner_description[]
    site_common_content_description   site_common_content_description[]
    site_common_content_video         site_common_content_video[]
    site_content_description          site_content_description[]
    site_content_video                site_content_video[]
    site_event_video                  site_event_video[]
    site_headquarter_description      site_headquarter_description[]
    site_highlight_description        site_highlight_description[]
    site_interest_description         site_interest_description[]
    site_magazine_description         site_magazine_description[]
    site_modal_description            site_modal_description[]
    site_partner_description          site_partner_description[]
    site_partner_discount_description site_partner_discount_description[]
    site_place_description            site_place_description[]
    site_sponsor_description          site_sponsor_description[]
    site_subject_description          site_subject_description[]

    @@index([name], map: "name")
}

model ez_module {
    id                    Int                     @id @default(autoincrement())
    id_parent             Int?
    icon                  String                  @db.VarChar(255)
    order_by              Int                     @default(0)
    status                Boolean                 @default(true)
    visible               Boolean                 @default(true)
    action                String?                 @db.Text
    system                ez_module_system
    created               DateTime                @default(now()) @db.Timestamp(0)
    update                DateTime?               @db.Timestamp(0)
    deleted               DateTime?               @db.Timestamp(0)
    ez_module             ez_module?              @relation("ez_moduleToez_module", fields: [id_parent], references: [id], onDelete: Restrict, map: "fk_module_parent")
    other_ez_module       ez_module[]             @relation("ez_moduleToez_module")
    ez_module_company     ez_module_company[]
    ez_module_description ez_module_description[]

    @@index([id_parent], map: "id_parent")
}

model ez_module_company {
    id_company Int
    id_module  Int
    ez_company ez_company @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "fk_module_company_company")
    ez_module  ez_module  @relation(fields: [id_module], references: [id], onDelete: Cascade, map: "fk_module_company_module")

    @@id([id_company, id_module])
    @@index([id_company], map: "id_company")
    @@index([id_module], map: "id_module")
}

model ez_module_description {
    id_module   Int         @default(autoincrement())
    id_language Int
    name        String      @db.VarChar(255)
    slug        String?     @db.VarChar(255)
    ez_language ez_language @relation(fields: [id_language], references: [id], map: "fk_module_description_language")
    ez_module   ez_module   @relation(fields: [id_module], references: [id], onDelete: Cascade, map: "fk_module_description_module")

    @@id([id_module, id_language])
    @@index([id_language], map: "id_language")
}

model ez_route {
    id                   Int                    @id @default(autoincrement())
    id_company           Int
    label                String?                @db.VarChar(255)
    url_complement       String?                @db.VarChar(255)
    key                  String                 @db.VarChar(255)
    method               String                 @db.VarChar(255)
    order_by             Int                    @default(1)
    status               Boolean                @default(true)
    created              DateTime               @default(now()) @db.Timestamp(0)
    updated              DateTime?              @db.Timestamp(0)
    deleted              DateTime?              @db.Timestamp(0)
    ez_company           ez_company             @relation(fields: [id_company], references: [id], map: "fk_route_company")
    ez_route_description ez_route_description[]

    @@index([id_company], map: "id_company")
}

model ez_route_description {
    id_route        Int
    id_language     Int
    url             String?     @db.VarChar(255)
    seo_title       String?     @db.VarChar(255)
    seo_description String?     @db.Text
    seo_keywords    String?     @db.Text
    ez_language     ez_language @relation(fields: [id_language], references: [id], map: "fk_route_description_language")
    ez_route        ez_route    @relation(fields: [id_route], references: [id], onDelete: Cascade, map: "fk_route_description_route")

    @@id([id_route, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_route], map: "id_route")
}

model ez_session {
    session_id    String @id @default("0") @db.VarChar(40)
    ip_address    String @default("0") @db.VarChar(45)
    user_agent    String @db.VarChar(255)
    last_activity Int    @default(0) @db.UnsignedInt
    user_data     String @db.Text

    @@index([last_activity], map: "last_activity_idx")
}

model ez_state {
    id      Int       @id @default(autoincrement())
    uf      String    @default("") @db.Char(2)
    name    String    @default("") @db.VarChar(255)
    created DateTime  @default(now()) @db.Timestamp(0)
    updated DateTime? @db.Timestamp(0)
    deleted DateTime? @db.Timestamp(0)
    ez_city ez_city[]
}

model ez_user {
    id              Int               @id @default(autoincrement())
    id_group        Int
    name            String            @db.VarChar(255)
    email           String            @unique(map: "email") @db.VarChar(255)
    phone           String?           @db.VarChar(16)
    login           String            @unique(map: "login") @db.VarChar(255)
    password        String            @db.VarChar(255)
    avatar          String?           @db.VarChar(255)
    registered      DateTime?         @db.Timestamp(0)
    last_access     DateTime?         @db.DateTime(0)
    permissions     String            @db.Text
    companies       String?           @default("1") @db.VarChar(50)
    status          Boolean           @default(true)
    admin           Boolean?          @default(false)
    online          Boolean           @default(false)
    created         DateTime          @default(now()) @db.Timestamp(0)
    update          DateTime?         @db.Timestamp(0)
    deleted         DateTime?         @db.Timestamp(0)
    ez_company_user ez_company_user[]
    ez_user_group   ez_user_group     @relation(fields: [id_group], references: [id], map: "fk_user_group")

    @@index([id_group], map: "id_group")
}

model ez_user_group {
    id          Int       @id @default(autoincrement())
    name        String    @db.VarChar(255)
    permissions String    @db.Text
    registered  DateTime? @db.Timestamp(0)
    status      Boolean   @default(true)
    flags       String?   @db.Text
    created     DateTime  @default(now()) @db.Timestamp(0)
    update      DateTime? @db.Timestamp(0)
    deleted     DateTime? @db.Timestamp(0)
    ez_user     ez_user[]
}

model log_place {
    id            Int      @id @default(autoincrement())
    id_place      Int
    place         String   @db.VarChar(255)
    fields_before String   @db.Text
    fields_after  String   @db.Text
    created       DateTime @default(now()) @db.Timestamp(0)
    user          String   @db.VarChar(255)
    ip            String   @db.VarChar(255)
}

model new_app_Training_drill_user {
    id          Int       @id @default(autoincrement())
    template_id Int?
    record_id   Int?
    name        String?   @db.VarChar(255)
    status      Int       @default(1) @db.TinyInt
    order_by    Int?
    expiration  String?   @db.VarChar(255)
    created     DateTime? @db.DateTime(0)
    updated     DateTime? @db.DateTime(0)
    deleted     DateTime? @db.DateTime(0)
}

model new_app_training_drill_equipaments {
    id          Int @id @default(autoincrement())
    exercise_id Int
    equip_id    Int
    status      Int @default(1) @db.TinyInt
}

model new_app_training_drill_exercises {
    id                Int       @id @default(autoincrement())
    exercise_id       Int
    drill_template_id Int?
    drill_id          Int?
    description       String?   @db.LongText
    series            String?   @db.VarChar(45)
    rep               String?   @db.VarChar(45)
    weight            String?   @db.VarChar(45)
    interval          String?   @db.VarChar(45)
    order_by          Int?
    status            Int?      @default(1) @db.TinyInt
    created           DateTime? @db.DateTime(0)
    updated           DateTime? @db.DateTime(0)
    deleted           DateTime? @db.DateTime(0)
}

model new_app_training_drill_template {
    id       Int       @id @default(autoincrement())
    name     String    @db.VarChar(255)
    order_by Int
    status   Int       @default(1) @db.TinyInt
    created  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
    updated  DateTime? @db.DateTime(0)
    deleted  DateTime? @db.DateTime(0)
}

model new_app_training_history {
    id        Int       @id @default(autoincrement())
    drill_id  Int?
    associado String?   @db.VarChar(6)
    sequencia String?   @db.VarChar(6)
    start     DateTime? @db.DateTime(0)
    end       DateTime? @db.DateTime(0)
    order_by  Int?
    status    Int?      @default(1) @db.TinyInt
    created   DateTime? @db.DateTime(0)
    updated   DateTime? @db.DateTime(0)
    deleted   DateTime? @db.DateTime(0)
}

model new_app_training_user_desc {
    id             Int       @id @default(autoincrement())
    name           String?   @db.VarChar(255)
    sex            String?   @db.TinyText
    birthday       String?   @db.VarChar(10)
    experience     Boolean?
    email          String?   @db.VarChar(255)
    professor_name String?   @db.VarChar(255)
    frequency      String?   @db.VarChar(255)
    goal           String?   @db.VarChar(255)
    description    String?   @db.VarChar(255)
    last_change    DateTime? @db.DateTime(0)
    ass_foto       String?   @db.LongText
    status         Boolean?  @default(true)
    created        DateTime? @db.Timestamp(0)
    updated        DateTime? @db.Timestamp(0)
    deleted        DateTime? @db.Timestamp(0)
}

model new_app_training_user_master {
    id                   Int       @id @default(autoincrement())
    associado            String?   @db.VarChar(6)
    sequencia            String?   @db.VarChar(2)
    id_drill_record      Int?
    id_user_desc         Int?
    last_id_drill_record Int?
    status               Int?      @default(1) @db.TinyInt
    order_by             Int?
    expiration           DateTime? @db.DateTime(0)
    created              DateTime? @db.DateTime(0)
    updated              DateTime? @db.DateTime(0)
    deleted              DateTime? @db.DateTime(0)
}

model new_app_training_user_training_record {
    id         Int       @id @default(autoincrement())
    associado  String?   @db.VarChar(6)
    sequencia  String?   @db.VarChar(2)
    status     Int?      @default(1) @db.TinyInt
    quantity   Int?
    expiration String?   @db.VarChar(30)
    created    DateTime? @db.DateTime(0)
    updated    DateTime? @db.DateTime(0)
    deleted    DateTime? @db.DateTime(0)
}

model new_base_training_equips {
    id                Int       @id @default(autoincrement())
    name              String?   @db.VarChar(255)
    description       String?   @db.LongText
    equipament_number String?   @db.VarChar(255)
    status            Int?      @default(1) @db.TinyInt
    order_by          Int?
    created           DateTime? @db.DateTime(0)
    updated           DateTime? @db.DateTime(0)
    deleted           DateTime? @db.DateTime(0)
}

model new_base_training_exercises {
    id                Int       @id @default(autoincrement())
    name              String?   @db.VarChar(255)
    link              String?   @db.VarChar(255)
    image             String?   @db.VarChar(255)
    series            String?   @db.VarChar(10)
    rep               String?   @db.VarChar(10)
    weight            String?   @db.VarChar(10)
    interval          String?   @db.VarChar(10)
    description       String?   @db.LongText
    id_muscular_group Int?
    status            Int?      @default(1) @db.TinyInt
    order_by          Int?
    created           DateTime? @db.DateTime(0)
    updated           DateTime? @db.DateTime(0)
    deleted           DateTime? @db.DateTime(0)
}

model new_base_training_muscular_group {
    id          Int       @id @default(autoincrement())
    name        String?   @db.VarChar(255)
    description String?   @db.LongText
    status      Int?      @default(1) @db.TinyInt
    order_by    Int?
    created     DateTime? @db.DateTime(0)
    updated     DateTime? @db.DateTime(0)
    deleted     DateTime? @db.DateTime(0)
}

model ps_campaign {
    id          Int       @id @default(autoincrement())
    id_group    Int
    identifier  String    @db.VarChar(80)
    status      Boolean   @default(true)
    attributes  String    @db.Text
    dt_start    DateTime? @db.DateTime(0)
    dt_end      DateTime? @db.DateTime(0)
    log_created DateTime? @default(now()) @db.DateTime(0)
    log_updated DateTime? @db.DateTime(0)
    log_deleted DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
    ps_group    ps_group  @relation(fields: [id_group], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ps_fks_triggers_id_group")
    ps_push     ps_push[]

    @@unique([identifier, log_deleted], map: "identifier_UNIQUE")
    @@index([id_group], map: "ps_fks_triggers_id_group_idx")
}

model ps_group {
    id          Int           @id @default(autoincrement())
    name        String        @default("Sem nome") @db.VarChar(80)
    code        ps_group_code @unique(map: "code_UNIQUE") @default(RESERVAS)
    status      Boolean       @default(true)
    log_created DateTime?     @default(now()) @db.DateTime(0)
    log_updated DateTime?     @db.DateTime(0)
    log_deleted DateTime?     @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
    ps_campaign ps_campaign[]

    @@unique([name, log_deleted], map: "name_UNIQUE")
}

model ps_push {
    id           Int                @id @default(autoincrement())
    id_campaign  Int
    image        String?            @db.VarChar(255)
    delay        Int                @default(0)
    delay_is_day Boolean            @default(false)
    delay_unit   ps_push_delay_unit @default(hours)
    status       Boolean            @default(true)
    order        Int
    log_created  DateTime?          @default(now()) @db.DateTime(0)
    log_updated  DateTime?          @db.DateTime(0)
    log_deleted  DateTime?          @db.DateTime(0)
    last_send    DateTime?          @db.DateTime(0)
    ps_campaign  ps_campaign        @relation(fields: [id_campaign], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ps_fks_pushs_id_trigger")
    ps_send      ps_send[]
    ps_variance  ps_variance[]

    @@index([id_campaign], map: "ps_fks_pushs_id_trigger_idx")
}

model ps_send {
    id             Int               @id @default(autoincrement())
    id_push        Int
    id_ju          Int?
    ju_table       ps_send_ju_table?
    status         Boolean           @default(false)
    target_count   Int               @default(0) @db.UnsignedInt
    target_failure Int               @default(0) @db.UnsignedInt
    target_success Int               @default(0) @db.UnsignedInt
    target_read    Int               @default(0) @db.UnsignedInt
    payload        String?           @db.Text
    dt_sended      DateTime?         @db.DateTime(0)
    log_created    DateTime?         @default(now()) @db.DateTime(0)
    log_updated    DateTime?         @db.DateTime(0)
    log_deleted    DateTime?         @db.DateTime(0)
    ps_push        ps_push           @relation(fields: [id_push], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ps_fks_sends_id_push")
    ps_send_user   ps_send_user[]

    @@index([id_ju], map: "id_ju")
    @@index([id_push], map: "ps_fks_sends_id_push_idx")
}

model ps_send_user {
    id          Int       @id @default(autoincrement()) @db.UnsignedInt
    id_send     Int
    id_user     String    @db.VarChar(255)
    sequency    String    @default("00") @db.Char(2)
    udid        String?   @db.VarChar(255)
    name        String?   @db.VarChar(255)
    read        Int       @default(0) @db.TinyInt
    status      Boolean   @default(true)
    log_created DateTime? @default(now()) @db.DateTime(0)
    log_updated DateTime? @db.DateTime(0)
    log_deleted DateTime? @db.DateTime(0)
    ps_send     ps_send   @relation(fields: [id_send], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ps_fks_send_users_id_send")

    @@index([id_user, sequency], map: "id_user_sequency")
    @@index([id_send], map: "ps_fks_send_users_id_send_idx")
}

model ps_variance {
    id          Int       @id @default(autoincrement())
    id_push     Int
    title       String    @db.VarChar(255)
    text        String    @db.Text
    status      Boolean   @default(true)
    log_created DateTime? @default(now()) @db.DateTime(0)
    log_updated DateTime? @db.DateTime(0)
    log_deleted DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
    ps_push     ps_push   @relation(fields: [id_push], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ps_fks_variance_id_push")

    @@index([id_push], map: "ps_fks_variance_id_push_idx")
}

model site_album {
    id                     Int                      @id @default(autoincrement())
    id_company             Int                      @default(1)
    id_category            Int?
    date                   DateTime                 @db.DateTime(0)
    order_by               Int
    status                 Int?                     @default(0) @db.TinyInt
    created                DateTime                 @default(now()) @db.Timestamp(0)
    updated                DateTime?                @default(now()) @db.Timestamp(0)
    deleted                DateTime?                @db.Timestamp(0)
    site_album_category    site_album_category?     @relation(fields: [id_category], references: [id], map: "fk_album_category")
    ez_company             ez_company               @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_album_ibfk_1")
    site_album_description site_album_description[]
    site_album_gallery     site_album_gallery[]

    @@index([id_category], map: "id_category")
    @@index([id_company], map: "id_company")
}

model site_album_category {
    id                              Int                               @id @default(autoincrement())
    id_company                      Int
    order_by                        Int                               @default(0)
    status                          Boolean?                          @default(false)
    created                         DateTime                          @default(now()) @db.Timestamp(0)
    updated                         DateTime?                         @db.Timestamp(0)
    deleted                         DateTime?                         @db.Timestamp(0)
    site_album                      site_album[]
    ez_company                      ez_company                        @relation(fields: [id_company], references: [id], map: "fk_site_album_category_company")
    site_album_category_description site_album_category_description[]

    @@index([id_company], map: "id_company")
}

model site_album_category_description {
    id_category         Int
    id_language         Int
    title               String?             @db.VarChar(255)
    slug                String?             @db.VarChar(255)
    site_album_category site_album_category @relation(fields: [id_category], references: [id], onDelete: Cascade, map: "fk_site_album_category_description_album_category")
    ez_language         ez_language         @relation(fields: [id_language], references: [id], map: "fk_site_album_category_description_language")

    @@id([id_category, id_language])
    @@index([id_category], map: "id_category")
    @@index([id_language], map: "id_language")
}

model site_album_description {
    id_album         Int
    id_language      Int
    slug             String      @db.Text
    title            String      @db.VarChar(255)
    meta_keywords    String?     @db.VarChar(255)
    meta_description String?     @db.VarChar(255)
    site_album       site_album  @relation(fields: [id_album], references: [id], onDelete: Cascade, map: "fk_album_description")
    ez_language      ez_language @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "fk_album_language")

    @@id([id_album, id_language])
    @@index([id_album], map: "id_album")
    @@index([id_language], map: "id_language")
}

model site_album_gallery {
    id          Int        @id @default(autoincrement())
    id_album    Int
    file        String     @db.VarChar(255)
    subtitle    String?    @db.VarChar(255)
    order_by    Int?
    highlighted Boolean?   @default(false)
    created     DateTime   @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated     Int?
    deleted     Int?
    site_album  site_album @relation(fields: [id_album], references: [id], onDelete: Cascade, map: "site_album_gallery_ibfk_1")

    @@index([id_album], map: "id_album")
}

model site_associate {
    id         Int                    @id @default(autoincrement())
    id_company Int
    name       String                 @db.VarChar(255)
    email      String                 @db.VarChar(255)
    phone      String?                @db.VarChar(255)
    mobile     String?                @db.VarChar(255)
    address    String?                @db.VarChar(255)
    complement String?                @db.VarChar(255)
    state      String?                @db.VarChar(255)
    city       String?                @db.VarChar(255)
    message    String?                @db.Text
    status     site_associate_status?
    receivers  String?                @db.VarChar(255)
    created    DateTime               @default(now()) @db.Timestamp(0)
    updated    DateTime?              @db.Timestamp(0)
    deleted    DateTime?              @db.Timestamp(0)
    ez_company ez_company             @relation(fields: [id_company], references: [id], map: "fk_associate_company")

    @@index([id_company], map: "id_company")
}

model site_banner {
    id                      Int                       @id @default(autoincrement())
    id_company              Int
    image                   String                    @db.VarChar(255)
    image_secondary         String?                   @db.VarChar(255)
    order_by                Int                       @default(0)
    status                  Boolean?                  @default(false)
    created                 DateTime                  @default(now()) @db.Timestamp(0)
    updated                 DateTime?                 @db.Timestamp(0)
    deleted                 DateTime?                 @db.Timestamp(0)
    ez_company              ez_company                @relation(fields: [id_company], references: [id], map: "fk_site_banner_company")
    site_banner_description site_banner_description[]

    @@index([id_company], map: "id_company")
}

model site_banner_description {
    id_banner   Int
    id_language Int
    title       String?                        @db.VarChar(255)
    subtitle    String?                        @db.VarChar(255)
    link        String?                        @db.VarChar(255)
    target      site_banner_description_target @default(self)
    site_banner site_banner                    @relation(fields: [id_banner], references: [id], onDelete: Cascade, map: "fk_site_banner_description_banner")
    ez_language ez_language                    @relation(fields: [id_language], references: [id], map: "fk_site_banner_description_language")

    @@id([id_banner, id_language])
    @@index([id_banner], map: "id_banner")
    @@index([id_language], map: "id_language")
}

model site_combo {
    id             Int        @id @default(autoincrement())
    id_company     Int
    id_service     Int
    combo_services String     @db.Text
    order_by       Int        @default(0)
    status         Boolean?   @default(false)
    created        DateTime   @default(now()) @db.Timestamp(0)
    updated        DateTime?  @db.Timestamp(0)
    deleted        DateTime?  @db.Timestamp(0)
    ez_company     ez_company @relation(fields: [id_company], references: [id], map: "fk_site_combo_company")

    @@index([id_company], map: "id_company")
}

model site_common_content {
    id                                Int                                 @id @default(autoincrement())
    id_company                        Int
    slug                              String                              @db.VarChar(255)
    status                            Boolean                             @default(true)
    created                           DateTime                            @default(now()) @db.Timestamp(0)
    updated                           DateTime?                           @db.Timestamp(0)
    deleted                           DateTime?                           @db.Timestamp(0)
    ez_company                        ez_company                          @relation(fields: [id_company], references: [id], map: "fk_common_content_company")
    site_common_content_configuration site_common_content_configuration[]
    site_common_content_description   site_common_content_description[]
    site_common_content_gallery       site_common_content_gallery[]
    site_common_content_video         site_common_content_video[]

    @@index([id_company], map: "id_company")
}

model site_common_content_configuration {
    id                  Int                                               @id @default(autoincrement())
    id_common_content   Int
    enable_title        site_common_content_configuration_enable_title    @default(enabled)
    enable_subtitle     site_common_content_configuration_enable_subtitle @default(enabled)
    enable_area         site_common_content_configuration_enable_area     @default(enabled)
    enable_subarea      site_common_content_configuration_enable_subarea  @default(enabled)
    enable_slug         site_common_content_configuration_enable_slug     @default(enabled)
    enable_text         site_common_content_configuration_enable_text     @default(enabled)
    enable_image        site_common_content_configuration_enable_image    @default(enabled)
    enable_archive      site_common_content_configuration_enable_archive  @default(enabled)
    enable_link         site_common_content_configuration_enable_link     @default(enabled)
    enable_status       site_common_content_configuration_enable_status   @default(enabled)
    enable_gallery      site_common_content_configuration_enable_gallery  @default(disabled)
    enable_videos       site_common_content_configuration_enable_videos   @default(disabled)
    enable_edit         site_common_content_configuration_enable_edit     @default(enabled)
    enable_delete       site_common_content_configuration_enable_delete   @default(enabled)
    site_common_content site_common_content                               @relation(fields: [id_common_content], references: [id], onDelete: Cascade, map: "fk_common_content_configuration_content")

    @@index([id_common_content], map: "id_common_content")
}

model site_common_content_description {
    id                  Int                 @id @default(autoincrement())
    id_language         Int
    id_common_content   Int
    title               String?             @db.VarChar(255)
    subtitle            String?             @db.VarChar(255)
    area                String?             @db.VarChar(255)
    subarea             String?             @db.VarChar(255)
    text                String?             @db.Text
    link                String?             @db.VarChar(255)
    archive             String?             @db.VarChar(255)
    image               String?             @db.VarChar(255)
    site_common_content site_common_content @relation(fields: [id_common_content], references: [id], onDelete: Cascade, map: "fk_common_content_description_content")
    ez_language         ez_language         @relation(fields: [id_language], references: [id], onUpdate: Restrict, map: "fk_common_content_description_language")

    @@index([id_common_content], map: "id_common_content")
    @@index([id_language], map: "id_language")
}

model site_common_content_gallery {
    id                  Int                 @id @default(autoincrement())
    id_common_content   Int
    file                String              @db.VarChar(255)
    subtitle            String?             @db.VarChar(255)
    order_by            Int?                @default(1)
    highlighted         Boolean
    created             DateTime            @default(now()) @db.Timestamp(0)
    updated             DateTime?           @db.Timestamp(0)
    deleted             DateTime?           @db.Timestamp(0)
    site_common_content site_common_content @relation(fields: [id_common_content], references: [id], onDelete: Cascade, map: "fk_common_content_gallery_content")

    @@index([id_common_content], map: "id_common_content")
}

model site_common_content_video {
    id                  Int                 @id @default(autoincrement())
    id_common_content   Int
    id_language         Int
    title               String?             @db.VarChar(255)
    link                String              @db.VarChar(255)
    site_common_content site_common_content @relation(fields: [id_common_content], references: [id], onDelete: Cascade, map: "fk_common_content_video_content")
    ez_language         ez_language         @relation(fields: [id_language], references: [id], map: "fk_common_content_video_language")

    @@index([id_common_content], map: "id_common_content")
    @@index([id_language], map: "id_language")
}

model site_contact {
    id         Int                  @id @default(autoincrement())
    id_company Int
    name       String               @db.VarChar(255)
    email      String               @db.VarChar(255)
    phone      String?              @db.VarChar(255)
    subject    String?              @db.VarChar(255)
    message    String?              @db.Text
    status     site_contact_status?
    area       site_contact_area?   @default(Contato)
    receivers  String?              @db.VarChar(255)
    created    DateTime             @default(now()) @db.Timestamp(0)
    updated    DateTime?            @db.Timestamp(0)
    deleted    DateTime?            @db.Timestamp(0)
    ez_company ez_company           @relation(fields: [id_company], references: [id], map: "fk_contact_company")

    @@index([id_company], map: "id_company")
}

model site_content {
    id                       Int                        @id @default(autoincrement())
    id_parent                Int?
    id_company               Int
    reference                String                     @db.VarChar(255)
    type                     site_content_type
    manageable               Boolean                    @default(true)
    order_by                 Int
    status                   Boolean                    @default(true)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    ez_company               ez_company                 @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "fk_content_company")
    site_content_description site_content_description[]
    site_content_gallery     site_content_gallery[]
    site_content_video       site_content_video[]

    @@index([id_company], map: "id_company")
    @@index([id_parent], map: "id_parent")
    @@index([reference], map: "reference")
}

model site_content_description {
    id_content   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    text         String?      @db.Text
    link         String?      @db.VarChar(255)
    keywords     String?      @db.VarChar(255)
    slug         String       @db.VarChar(255)
    site_content site_content @relation(fields: [id_content], references: [id], onDelete: Cascade, map: "fk_content_description")
    ez_language  ez_language  @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "fk_content_language")

    @@id([id_content, id_language])
    @@index([id_language], map: "fk_content_language")
}

model site_content_gallery {
    id           Int          @id @default(autoincrement())
    id_content   Int
    file         String       @db.VarChar(255)
    subtitle     String       @db.VarChar(255)
    order_by     Int?         @default(1)
    highlighted  Boolean
    created      DateTime     @default(now()) @db.Timestamp(0)
    updated      DateTime?    @db.Timestamp(0)
    deleted      DateTime?    @db.Timestamp(0)
    site_content site_content @relation(fields: [id_content], references: [id], onDelete: Cascade, map: "site_content_gallery_ibfk_1")

    @@index([id_content], map: "id_content")
}

model site_content_video {
    id           Int          @id @default(autoincrement())
    id_content   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    link         String       @db.VarChar(255)
    ez_language  ez_language  @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "site_content_video_ibfk_1")
    site_content site_content @relation(fields: [id_content], references: [id], onDelete: Cascade, map: "site_content_video_ibfk_2")

    @@index([id_content], map: "id_content")
    @@index([id_language], map: "id_language")
}

model site_entre_jogo {
    id        Int      @id @default(autoincrement())
    associado Int
    sequencia Int
    name      String   @db.VarChar(255)
    message   String   @db.Text
    fileName  String   @db.VarChar(255)
    approved  Int      @default(0) @db.TinyInt
    reproved  Int      @default(0) @db.TinyInt
    status    Int      @default(1) @db.TinyInt
    order_by  Int
    created   DateTime @default(now()) @db.Timestamp(0)
    updated   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    deleted   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model site_event {
    id                     Int                      @id @default(autoincrement())
    id_company             Int                      @default(1)
    id_ju                  Int?
    id_category            Int?
    date_start             DateTime?                @db.Timestamp(0)
    date_end               DateTime?                @db.Timestamp(0)
    status                 Int?                     @default(0) @db.TinyInt
    highlight              Int?                     @default(0) @db.TinyInt
    members_purchase       Int?                     @default(0) @db.TinyInt
    visitors_purchase      Int?                     @default(0) @db.TinyInt
    created                DateTime                 @default(now()) @db.Timestamp(0)
    updated                DateTime?                @db.Timestamp(0)
    deleted                DateTime?                @db.Timestamp(0)
    ez_company             ez_company               @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_event_ibfk_1")
    site_event_description site_event_description[]
    site_event_gallery     site_event_gallery[]
    site_event_video       site_event_video[]

    @@index([id_company], map: "id_company")
}

model site_event_category {
    id               Int       @id @default(autoincrement())
    id_main_category Int
    name             String    @db.VarChar(255)
    order_by         Int
    status           Int       @default(1) @db.TinyInt
    created          DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated          DateTime? @db.Timestamp(0)
    deleted          DateTime? @db.Timestamp(0)
}

model site_event_category_main {
    id       Int    @id @default(autoincrement())
    name     String @db.VarChar(255)
    order_by Int
    status   Int
}

model site_event_description {
    id_event     Int
    id_language  Int
    slug         String     @db.Text
    title        String     @db.VarChar(255)
    text         String?    @db.Text
    voucher_text String?    @db.Text
    app_text     String?    @db.Text
    app_image    String?    @db.VarChar(255)
    site_event   site_event @relation(fields: [id_event], references: [id], onDelete: Cascade, map: "site_event_description_ibfk_1")

    @@id([id_event, id_language])
    @@index([id_event], map: "id_event")
    @@index([id_language], map: "id_language")
}

model site_event_gallery {
    id          Int        @id @default(autoincrement())
    id_event    Int
    file        String     @db.VarChar(255)
    subtitle    String?    @db.VarChar(255)
    order_by    Int?
    highlighted Boolean?   @default(false)
    created     DateTime   @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated     Int?
    deleted     Int?
    site_event  site_event @relation(fields: [id_event], references: [id], onDelete: Cascade, map: "site_event_gallery_ibfk_1")

    @@index([id_event], map: "id_event")
}

model site_event_video {
    id          Int         @id @default(autoincrement())
    id_event    Int
    id_language Int
    title       String?     @db.VarChar(255)
    link        String      @db.VarChar(255)
    ez_language ez_language @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "site_event_video_ibfk_1")
    site_event  site_event  @relation(fields: [id_event], references: [id], onDelete: Cascade, map: "site_event_video_ibfk_2")

    @@index([id_event], map: "id_event")
    @@index([id_language], map: "id_language")
}

model site_goal {
    id              Int               @id
    title           String            @db.VarChar(255)
    site_place_goal site_place_goal[]
}

model site_gym_locations {
    id       Int       @id @default(autoincrement())
    name     String    @db.VarChar(255)
    order_by Int
    status   Int       @default(1)
    created  DateTime  @default(now()) @db.Timestamp(0)
    updated  DateTime? @db.Timestamp(0)
    deleted  DateTime? @db.Timestamp(0)
}

model site_gym_teachers {
    id       Int       @id @default(autoincrement())
    name     String    @db.VarChar(255)
    location Int
    status   Int       @default(1)
    order_by Int
    created  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated  DateTime? @db.Timestamp(0)
    deleted  DateTime? @db.Timestamp(0)
}

model site_headquarter {
    id                           Int                            @id @default(autoincrement())
    id_company                   Int
    phone                        String?                        @db.VarChar(255)
    state                        String?                        @db.VarChar(255)
    city                         String?                        @db.VarChar(255)
    zipcode                      String?                        @db.VarChar(255)
    district                     String?                        @db.VarChar(255)
    address                      String?                        @db.VarChar(255)
    number                       String?                        @db.VarChar(255)
    complement                   String?                        @db.VarChar(255)
    lat_lng                      Unsupported("geometry")?
    id_country                   Int?
    order_by                     Int                            @default(0)
    status                       Boolean?                       @default(false)
    created                      DateTime                       @default(now()) @db.Timestamp(0)
    updated                      DateTime?                      @db.Timestamp(0)
    deleted                      DateTime?                      @db.Timestamp(0)
    ez_company                   ez_company                     @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_headquarter_ibfk_1")
    site_headquarter_description site_headquarter_description[]

    @@index([id_company], map: "id_company")
}

model site_headquarter_description {
    id_headquarter   Int
    id_language      Int
    title            String?          @db.VarChar(255)
    text             String?          @db.Text
    business_hours   String?          @db.Text
    ez_language      ez_language      @relation(fields: [id_language], references: [id], map: "site_headquarter_description_ibfk_2")
    site_headquarter site_headquarter @relation(fields: [id_headquarter], references: [id], onDelete: Cascade, map: "site_headquarter_description_ibfk_3")

    @@id([id_headquarter, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_headquarter], map: "id_logo")
}

model site_highlight {
    id                         Int                          @id @default(autoincrement())
    id_company                 Int
    image                      String                       @db.VarChar(255)
    image_secondary            String?                      @db.VarChar(255)
    platform                   site_highlight_platform
    order_by                   Int                          @default(0)
    status                     Boolean?                     @default(false)
    created                    DateTime                     @default(now()) @db.Timestamp(0)
    updated                    DateTime?                    @db.Timestamp(0)
    deleted                    DateTime?                    @db.Timestamp(0)
    ez_company                 ez_company                   @relation(fields: [id_company], references: [id], map: "fk_site_highlight_company")
    site_highlight_description site_highlight_description[]

    @@index([id_company], map: "id_company")
}

model site_highlight_description {
    id_highlight   Int
    id_language    Int
    title          String?                           @db.VarChar(255)
    subtitle       String?                           @db.VarChar(255)
    link           String?                           @db.VarChar(255)
    target         site_highlight_description_target @default(self)
    site_highlight site_highlight                    @relation(fields: [id_highlight], references: [id], onDelete: Cascade, map: "fk_site_highlight_description_highlight")
    ez_language    ez_language                       @relation(fields: [id_language], references: [id], map: "fk_site_highlight_description_language")

    @@id([id_highlight, id_language])
    @@index([id_highlight], map: "id_highlight")
    @@index([id_language], map: "id_language")
}

model site_holidays {
    id    Int       @id @default(autoincrement())
    name  String?   @db.VarChar(255)
    date  DateTime? @db.DateTime(0)
    level String?   @db.VarChar(255)
    type  String?   @db.VarChar(255)
}

model site_interest {
    id                        Int                         @id @default(autoincrement())
    id_company                Int
    order_by                  Int                         @default(0)
    status                    Boolean?                    @default(false)
    created                   DateTime                    @default(now()) @db.Timestamp(0)
    updated                   DateTime?                   @db.Timestamp(0)
    deleted                   DateTime?                   @db.Timestamp(0)
    ez_company                ez_company                  @relation(fields: [id_company], references: [id], map: "fk_site_interest_company")
    site_interest_description site_interest_description[]

    @@index([id_company], map: "id_company")
}

model site_interest_description {
    id_interest   Int
    id_language   Int
    title         String?       @db.VarChar(255)
    slug          String?       @db.VarChar(255)
    site_interest site_interest @relation(fields: [id_interest], references: [id], onDelete: Cascade, map: "fk_site_interest_description_interest")
    ez_language   ez_language   @relation(fields: [id_language], references: [id], map: "fk_site_interest_description_language")

    @@id([id_interest, id_language])
    @@index([id_interest], map: "id_interest")
    @@index([id_language], map: "id_language")
}

model site_job_application {
    id        Int       @id @default(autoincrement())
    name      String    @db.VarChar(255)
    email     String    @db.VarChar(255)
    telephone String    @db.VarChar(15)
    which     String    @db.VarChar(255)
    about     String    @db.LongText
    cv        String    @db.VarChar(255)
    status    Int       @default(1) @db.TinyInt
    order_by  Int
    created   DateTime  @db.DateTime(0)
    updated   DateTime? @db.DateTime(0)
    deleted   DateTime? @db.DateTime(0)
}

model site_job_jobs {
    id       Int       @id @default(autoincrement())
    name     String    @db.VarChar(255)
    about    String?   @db.Text
    status   Boolean   @default(true)
    order_by Int       @default(1)
    created  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated  DateTime? @db.Timestamp(0)
    deleted  DateTime? @db.Timestamp(0)
}

model site_log_payment {
    id          Int      @id @default(autoincrement())
    id_user     String   @db.VarChar(50)
    id_payment  String?  @db.VarChar(45)
    seq         Int
    price       Decimal  @default(0.00) @db.Decimal(14, 2)
    transaction String   @db.VarChar(255)
    date        DateTime @default(now()) @db.Timestamp(0)
    id_service  String   @db.VarChar(50)
    service     String?  @db.VarChar(255)
    status      String?  @db.VarChar(45)
}

model site_log_payment_errors {
    id          Int      @id @default(autoincrement())
    id_payment  Int
    associado   String   @db.VarChar(15)
    sequencia   String   @db.VarChar(2)
    error_title String   @db.VarChar(255)
    first_error String   @db.VarChar(255)
    log         String   @db.LongText
    created     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
    version     String   @db.VarChar(10)
}

model site_magazine {
    id                        Int                         @id @default(autoincrement())
    id_company                Int
    date                      DateTime                    @db.Date
    status                    Boolean?                    @default(false)
    edicoes_anteriores        Boolean?                    @default(true)
    created                   DateTime                    @default(now()) @db.Timestamp(0)
    updated                   DateTime?                   @db.Timestamp(0)
    deleted                   DateTime?                   @db.Timestamp(0)
    order_by                  Int?
    ez_company                ez_company                  @relation(fields: [id_company], references: [id], map: "fk_site_magazine_company")
    site_magazine_description site_magazine_description[]

    @@index([id_company], map: "id_company")
}

model site_magazine_description {
    id_magazine   Int
    id_language   Int
    title         String?       @db.VarChar(255)
    image         String?       @db.VarChar(255)
    archive       String?       @db.VarChar(255)
    link          String?       @db.VarChar(255)
    ez_language   ez_language   @relation(fields: [id_language], references: [id], map: "fk_site_magazine_description_language")
    site_magazine site_magazine @relation(fields: [id_magazine], references: [id], onDelete: Cascade, map: "fk_site_magazine_description_magazine")

    @@id([id_magazine, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_magazine], map: "id_magazine")
}

model site_modal {
    id                     Int                      @id @default(autoincrement())
    id_company             Int
    image                  String                   @db.VarChar(255)
    image_secondary        String?                  @db.VarChar(255)
    date_start             DateTime                 @db.DateTime(0)
    date_end               DateTime                 @db.DateTime(0)
    order_by               Int                      @default(0)
    status                 Boolean?                 @default(false)
    created                DateTime                 @default(now()) @db.Timestamp(0)
    updated                DateTime?                @db.Timestamp(0)
    deleted                DateTime?                @db.Timestamp(0)
    ez_company             ez_company               @relation(fields: [id_company], references: [id], map: "fk_site_modal_company")
    site_modal_description site_modal_description[]

    @@index([id_company], map: "id_company")
}

model site_modal_description {
    id_modal    Int
    id_language Int
    title       String?                       @db.VarChar(255)
    link        String?                       @db.VarChar(255)
    target      site_modal_description_target @default(self)
    ez_language ez_language                   @relation(fields: [id_language], references: [id], map: "fk_site_modal_description_language")
    site_modal  site_modal                    @relation(fields: [id_modal], references: [id], onDelete: Cascade, map: "fk_site_modal_description_modal")

    @@id([id_modal, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_modal], map: "id_modal")
}

model site_newsletter {
    id         Int        @id @default(autoincrement())
    id_company Int
    name       String?    @db.VarChar(255)
    email      String?    @db.VarChar(255)
    interest   String?    @db.VarChar(255)
    status     Boolean    @default(false)
    created    DateTime   @default(now()) @db.Timestamp(0)
    updated    DateTime?  @db.Timestamp(0)
    deleted    DateTime?  @db.Timestamp(0)
    ez_company ez_company @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_newsletter_ibfk_1")

    @@index([id_company], map: "id_company")
}

model site_notification {
    id                            Int                             @id @default(autoincrement())
    id_company                    Int
    id_profile                    Int?
    birthday_from                 DateTime?                       @db.Date
    birthday_to                   DateTime?                       @db.Date
    sex                           site_notification_sex?
    age_from                      Int?                            @db.TinyInt
    age_to                        Int?                            @db.TinyInt
    sequency                      Int?                            @db.TinyInt
    category                      Int?
    financial_status              Int?
    notified                      Boolean?                        @default(false)
    scheduled                     Boolean?                        @default(false)
    order_by                      Int                             @default(0)
    status                        Boolean?                        @default(false)
    clienteCobrador               Boolean?                        @default(false)
    notify_tit                    Boolean?                        @default(false)
    targets                       Int?
    created                       DateTime                        @default(now()) @db.Timestamp(0)
    updated                       DateTime?                       @db.Timestamp(0)
    deleted                       DateTime?                       @db.Timestamp(0)
    ez_company                    ez_company                      @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_notification_ibfk_1")
    site_profile                  site_profile?                   @relation(fields: [id_profile], references: [id], map: "site_notification_ibfk_2")
    site_notification_description site_notification_description[]
    site_notification_profession  site_notification_profession[]
    site_notification_push_read   site_notification_push_read[]   @ignore
    site_notification_receiver    site_notification_receiver[]
    site_notification_schedule    site_notification_schedule[]
    site_notification_send        site_notification_send[]
    site_notification_service     site_notification_service[]
    site_notification_user        site_notification_user[]

    @@index([id_company], map: "id_company")
    @@index([id_profile], map: "id_profile")
}

model site_notification_description {
    id_notification   Int
    id_language       Int
    title             String?           @db.VarChar(255)
    text              String?           @db.Text
    site_notification site_notification @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_description_ibfk_1")

    @@id([id_notification, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_notification], map: "id_modal")
}

model site_notification_profession {
    id                Int               @unique(map: "id") @default(autoincrement())
    id_notification   Int
    id_profession     Int
    site_notification site_notification @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_profession_ibfk_3")
    site_profession   site_profession   @relation(fields: [id_profession], references: [id], onDelete: Cascade, map: "site_notification_profession_ibfk_4")

    @@id([id_notification, id])
    @@index([id_notification], map: "id_modal")
    @@index([id_profession], map: "id_profession")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model site_notification_push_read {
    id_notification        Int
    id_send                Int
    site_notification      site_notification      @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_push_read_ibfk_1")
    site_notification_send site_notification_send @relation(fields: [id_send], references: [id], onDelete: Cascade, map: "site_notification_push_read_ibfk_2")

    @@index([id_notification], map: "id_notification")
    @@index([id_send], map: "id_send")
    @@ignore
}

model site_notification_receiver {
    id                     Int                     @id @default(autoincrement())
    id_user                String                  @db.VarChar(255)
    sequency               String?                 @default("00") @db.VarChar(2)
    id_notification        Int?
    id_send                Int?
    udid                   String                  @db.VarChar(255)
    clicked                Boolean                 @default(false)
    order_by               Int                     @default(0)
    status                 Boolean?                @default(false)
    created                DateTime                @default(now()) @db.Timestamp(0)
    updated                DateTime?               @db.Timestamp(0)
    deleted                DateTime?               @db.Timestamp(0)
    app_user               app_user                @relation(fields: [id_user], references: [id], onDelete: Cascade, map: "site_notification_receiver_ibfk_1")
    site_notification      site_notification?      @relation(fields: [id_notification], references: [id], map: "site_notification_receiver_ibfk_2")
    site_notification_send site_notification_send? @relation(fields: [id_send], references: [id], map: "site_notification_receiver_ibfk_3")

    @@index([id_notification], map: "id_notification")
    @@index([id_user], map: "id_user")
    @@index([id_send], map: "site_notification_receiver_ibfk_3")
}

model site_notification_schedule {
    id                Int               @id @default(autoincrement())
    id_notification   Int
    to_send           DateTime          @default(now()) @db.Timestamp(0)
    status            Boolean           @default(false)
    site_notification site_notification @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_schedule_ibfk_1")

    @@index([id_notification], map: "id_notification")
}

model site_notification_send {
    id                          Int                           @id @default(autoincrement())
    id_notification             Int
    sended                      DateTime                      @default(now()) @db.Timestamp(0)
    status                      Boolean                       @default(false)
    sent_by                     String?                       @db.VarChar(45)
    site_notification_push_read site_notification_push_read[] @ignore
    site_notification_receiver  site_notification_receiver[]
    site_notification           site_notification             @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_send_ibfk_1")

    @@index([id_notification], map: "id_notification")
}

model site_notification_service {
    id                Int               @unique(map: "id") @default(autoincrement())
    id_notification   Int
    ser_servico       Int
    site_notification site_notification @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_service_ibfk_1")

    @@id([id_notification, id])
    @@index([id_notification], map: "id_modal")
}

model site_notification_user {
    id                Int               @unique(map: "id") @default(autoincrement())
    id_notification   Int
    associado         String            @db.VarChar(30)
    sequencia         String            @default("00") @db.Char(2)
    site_notification site_notification @relation(fields: [id_notification], references: [id], onDelete: Cascade, map: "site_notification_user_ibfk_1")

    @@id([id_notification, id])
    @@index([id_notification], map: "id_modal")
}

model site_partner {
    id                       Int                        @id @default(autoincrement())
    id_company               Int
    type                     site_partner_type
    image                    String                     @db.VarChar(255)
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    ez_company               ez_company                 @relation(fields: [id_company], references: [id], map: "fk_site_partner_company")
    site_partner_description site_partner_description[]

    @@index([id_company], map: "id_company")
}

model site_partner_description {
    id_partner   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    slug         String?      @db.VarChar(255)
    link         String?      @db.VarChar(255)
    ez_language  ez_language  @relation(fields: [id_language], references: [id], map: "fk_site_partner_description_language")
    site_partner site_partner @relation(fields: [id_partner], references: [id], onDelete: Cascade, map: "fk_site_partner_description_partner")

    @@id([id_partner, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_partner], map: "id_partner")
}

model site_partner_discount {
    id                                Int                                 @id @default(autoincrement())
    id_company                        Int
    type                              site_partner_discount_type
    image                             String                              @db.VarChar(255)
    order_by                          Int                                 @default(0)
    status                            Boolean?                            @default(false)
    username                          String?                             @db.VarChar(255)
    password                          String?                             @db.VarChar(255)
    created                           DateTime                            @default(now()) @db.Timestamp(0)
    updated                           DateTime?                           @db.Timestamp(0)
    deleted                           DateTime?                           @db.Timestamp(0)
    ez_company                        ez_company                          @relation(fields: [id_company], references: [id], map: "fk_site_partner_discount_company")
    site_partner_discount_description site_partner_discount_description[]

    @@index([id_company], map: "id_company")
}

model site_partner_discount_description {
    id_partner            Int
    id_language           Int
    title                 String?               @db.VarChar(255)
    slug                  String?               @db.VarChar(255)
    link                  String?               @db.VarChar(255)
    ez_language           ez_language           @relation(fields: [id_language], references: [id], map: "fk_site_partner_discount_description_language")
    site_partner_discount site_partner_discount @relation(fields: [id_partner], references: [id], onDelete: Cascade, map: "fk_site_partner_discount_description_partner")

    @@id([id_partner, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_partner], map: "id_partner")
}

model site_partner_point {
    id           Int      @id @default(autoincrement())
    id_user      Int
    sequency     String   @default("00") @db.Char(2)
    name         String   @db.VarChar(255)
    id_partner   Int
    price        Float
    date         DateTime @default(now()) @db.DateTime(0)
    rescued      Int      @default(0)
    extract      Int      @default(0)
    over_balance Int      @default(0)
}

model site_patrocinios {
    id               Int       @id @default(autoincrement())
    name_company     String?   @db.VarChar(255)
    name_responsible String?   @db.VarChar(255)
    email            String?   @db.VarChar(255)
    phone            String?   @db.VarChar(255)
    created          DateTime? @db.DateTime(0)
    updated          DateTime? @db.DateTime(0)
}

model site_place {
    id                       Int                      @default(autoincrement())
    id_company               Int
    status                   Boolean?                 @default(true)
    status_site              Boolean?
    status_app               Boolean?                 @default(false)
    allow_purchase           Boolean?                 @default(false)
    allow_non_members        Boolean?                 @default(false)
    allow_reserve_with_debts Boolean                  @default(false)
    reservation_rule         Int?
    max_week_reserves        Int?
    max_day_reserves         Int?
    type                     String                   @default("place") @db.VarChar(30)
    id_type                  Int
    order_by                 Int                      @default(1)
    created                  DateTime                 @default(now()) @db.Timestamp(0)
    updated                  DateTime?                @db.Timestamp(0)
    deleted                  DateTime?                @db.Timestamp(0)
    ez_company               ez_company               @relation(fields: [id_company], references: [id], map: "fk_site_place_company")
    site_place_ju            site_place_ju?           @relation(fields: [id], references: [id])
    site_place_description   site_place_description[]
    site_place_discount      site_place_discount[]
    site_place_gallery       site_place_gallery[]
    site_place_goal          site_place_goal[]

    @@id([id])
    @@index([id], map: "id")
    @@index([id_company], map: "id_company")
    @@index([type], map: "type")
}

model site_place_ju {
    id                     Int          @unique
    loc_idadeinicial       Int?
    loc_idadefinal         Int?
    loc_vlraluguel         Int?
    status                 Int          @default(1)
    ser_ativo              Boolean      @default(true)
    ser_permitecontratacao Boolean      @default(true)
    site_place             site_place[]
}

model site_place_description {
    id_place    Int
    id_language Int
    title       String?     @db.VarChar(255)
    text        String?     @db.Text
    slug        String      @db.VarChar(255)
    id_type     Int         @default(0)
    ez_language ez_language @relation(fields: [id_language], references: [id], map: "fk_site_place_description_language")
    site_place  site_place  @relation(fields: [id_place], references: [id], onDelete: Cascade, map: "fk_site_place_description_place")

    @@id([id_place, id_type])
    @@index([id_language], map: "id_language")
    @@index([id_place], map: "id_place")
    @@index([id_type], map: "id_type")
}

model site_place_discount {
    id_place   Int
    day        Int
    percent    Float      @default(0) @db.Float
    site_place site_place @relation(fields: [id_place], references: [id], onDelete: Cascade, map: "site_place_discount_ibfk_1")

    @@id([id_place, day])
    @@index([day], map: "id_goal")
}

model site_place_gallery {
    id          Int        @id @default(autoincrement())
    id_place    Int
    file        String     @db.VarChar(255)
    subtitle    String?    @db.VarChar(255)
    order_by    Int?
    highlighted Boolean?   @default(false)
    created     DateTime   @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    updated     Int?
    deleted     Int?
    site_place  site_place @relation(fields: [id_place], references: [id], onDelete: Cascade, map: "site_place_gallery_ibfk_1")

    @@index([id_place], map: "id_place")
}

model site_place_goal {
    id_place   Int
    id_goal    Int
    site_place site_place @relation(fields: [id_place], references: [id], onDelete: Cascade, map: "site_place_goal_ibfk_1")
    site_goal  site_goal  @relation(fields: [id_goal], references: [id], onDelete: Cascade, map: "site_place_goal_ibfk_2")

    @@id([id_place, id_goal])
    @@index([id_goal], map: "id_goal")
}

model site_place_request {
    id           Int                        @id @default(autoincrement())
    id_company   Int
    name         String                     @db.VarChar(255)
    email        String                     @db.VarChar(255)
    phone        String?                    @db.VarChar(255)
    place        String?                    @db.VarChar(255)
    message      String?                    @db.Text
    status       site_place_request_status?
    reserve_date DateTime?                  @db.DateTime(0)
    receivers    String?                    @db.VarChar(255)
    created      DateTime                   @default(now()) @db.Timestamp(0)
    updated      DateTime?                  @db.Timestamp(0)
    deleted      DateTime?                  @db.Timestamp(0)
    ez_company   ez_company                 @relation(fields: [id_company], references: [id], map: "fk_place_request_company")

    @@index([id_company], map: "id_company")
}

model site_profession {
    id                           Int                            @id @unique(map: "id") @default(autoincrement())
    title                        String                         @db.VarChar(255)
    site_notification_profession site_notification_profession[]
    site_profile_profession      site_profile_profession[]

    @@index([id, title], map: "id_title")
}

model site_profile {
    id                       Int                        @id @default(autoincrement())
    id_company               Int
    birthday_from            DateTime?                  @db.Date
    birthday_to              DateTime?                  @db.Date
    sex                      site_profile_sex?
    age_from                 Int?                       @db.TinyInt
    age_to                   Int?                       @db.TinyInt
    sequency                 Int?                       @db.TinyInt
    category                 Int?
    financial_status         Int?
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    site_notification        site_notification[]
    ez_company               ez_company                 @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_profile_ibfk_1")
    site_profile_description site_profile_description[]
    site_profile_profession  site_profile_profession[]
    site_profile_service     site_profile_service[]
    site_profile_user        site_profile_user[]

    @@index([id_company], map: "id_company")
}

model site_profile_description {
    id_profile   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    description  String?      @db.VarChar(255)
    site_profile site_profile @relation(fields: [id_profile], references: [id], onDelete: Cascade, map: "site_profile_description_ibfk_1")

    @@id([id_profile, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_profile], map: "id_modal")
}

model site_profile_profession {
    id              Int             @unique(map: "id") @default(autoincrement())
    id_profile      Int
    id_profession   Int
    site_profile    site_profile    @relation(fields: [id_profile], references: [id], onDelete: Cascade, map: "site_profile_profession_ibfk_3")
    site_profession site_profession @relation(fields: [id_profession], references: [id], onDelete: Cascade, map: "site_profile_profession_ibfk_4")

    @@id([id_profile, id])
    @@index([id_profile], map: "id_modal")
    @@index([id_profession], map: "id_profession")
}

model site_profile_service {
    id           Int          @unique(map: "id") @default(autoincrement())
    id_profile   Int
    ser_servico  Int
    site_profile site_profile @relation(fields: [id_profile], references: [id], onDelete: Cascade, map: "site_profile_service_ibfk_1")

    @@id([id_profile, id])
    @@index([id_profile], map: "id_modal")
}

model site_profile_user {
    id           Int          @unique(map: "id") @default(autoincrement())
    id_profile   Int
    associado    String       @db.VarChar(30)
    sequencia    String       @default("00") @db.Char(2)
    site_profile site_profile @relation(fields: [id_profile], references: [id], onDelete: Cascade, map: "site_profile_user_ibfk_1")

    @@id([id_profile, id])
    @@index([id_profile], map: "id_modal")
}

model site_social_image {
    id        Int      @id @default(autoincrement())
    associado Int?
    sequencia Int?
    name      String   @db.VarChar(255)
    message   String   @db.Text
    fileName  String   @db.VarChar(255)
    likes     Int      @default(0)
    approved  Int      @default(0) @db.TinyInt
    reproved  Int      @default(0) @db.TinyInt
    status    Int      @default(1) @db.TinyInt
    order_by  Int
    created   DateTime @default(now()) @db.Timestamp(0)
    updated   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
    deleted   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model site_sponsor {
    id                       Int                        @id @default(autoincrement())
    id_company               Int
    type                     site_sponsor_type
    image                    String?                    @default("null") @db.VarChar(255)
    banner                   String?                    @default("null") @db.VarChar(255)
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    featured                 Boolean?                   @default(false)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    ez_company               ez_company                 @relation(fields: [id_company], references: [id], map: "fk_site_sponsor_company")
    site_sponsor_description site_sponsor_description[]

    @@index([id_company], map: "id_company")
}

model site_sponsor_description {
    id_sponsor   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    link         String?      @db.VarChar(255)
    ez_language  ez_language  @relation(fields: [id_language], references: [id], map: "fk_site_sponsor_description_language")
    site_sponsor site_sponsor @relation(fields: [id_sponsor], references: [id], onDelete: Cascade, map: "fk_site_sponsor_description_sponsor")

    @@id([id_sponsor, id_language])
    @@index([id_language], map: "id_language")
    @@index([id_sponsor], map: "id_sponsor")
}

model site_subject {
    id                       Int                        @id @default(autoincrement())
    id_company               Int
    platform                 site_subject_platform      @default(site)
    order_by                 Int                        @default(0)
    status                   Boolean?                   @default(false)
    created                  DateTime                   @default(now()) @db.Timestamp(0)
    updated                  DateTime?                  @db.Timestamp(0)
    deleted                  DateTime?                  @db.Timestamp(0)
    ez_company               ez_company                 @relation(fields: [id_company], references: [id], onDelete: Cascade, map: "site_subject_ibfk_1")
    site_subject_description site_subject_description[]

    @@index([id_company], map: "id_company")
}

model site_subject_description {
    id_subject   Int
    id_language  Int
    title        String?      @db.VarChar(255)
    email        String?      @db.VarChar(255)
    site_subject site_subject @relation(fields: [id_subject], references: [id], onDelete: Cascade, map: "site_subject_description_ibfk_1")
    ez_language  ez_language  @relation(fields: [id_language], references: [id], onDelete: Cascade, map: "site_subject_description_ibfk_2")

    @@id([id_subject, id_language])
    @@index([id_language], map: "id_language")
}

model site_time_suggestion {
    id           Int                          @id @default(autoincrement())
    id_company   Int
    name         String                       @db.VarChar(255)
    email        String?                      @db.VarChar(255)
    age          String                       @db.VarChar(255)
    shift        String                       @db.VarChar(255)
    modality     String?                      @db.VarChar(255)
    observations String?                      @db.Text
    status       site_time_suggestion_status?
    created      DateTime                     @default(now()) @db.Timestamp(0)
    updated      DateTime?                    @db.Timestamp(0)
    deleted      DateTime?                    @db.Timestamp(0)
    ez_company   ez_company                   @relation(fields: [id_company], references: [id], map: "fk_time_suggestion_company")

    @@index([id_company], map: "id_company")
}

enum ps_group_code {
    RESERVAS
    GEO
    CONTRATACAO
    INGRESSOS
    ANIVERSARIO
}

enum site_common_content_configuration_enable_title {
    enabled
    disabled
}

enum site_partner_type {
    service
    pack
}

enum site_partner_discount_type {
    service
    pack
}

enum site_sponsor_type {
    sponsor
}

enum site_subject_platform {
    site
    app
    both
}

enum ps_send_ju_table {
    VW_RESERVA_QUADRAS
    VW_LOCACOES
    VW_RESERVA_SERVICOS
    VW_UTILIZACOES
}

enum site_common_content_configuration_enable_subtitle {
    enabled
    disabled
}

enum site_common_content_configuration_enable_area {
    enabled
    disabled
}

enum site_content_type {
    menu
    content
    link
    page
}

enum site_highlight_platform {
    site
    app
    both
}

enum site_modal_description_target {
    blank @map("_blank")
    self  @map("_self")
}

enum site_profile_sex {
    M
    F
}

enum ps_push_delay_unit {
    hours
    days
    minutes
}

enum site_banner_description_target {
    blank @map("_blank")
    self  @map("_self")
}

enum site_common_content_configuration_enable_subarea {
    enabled
    disabled
}

enum site_highlight_description_target {
    blank @map("_blank")
    self  @map("_self")
}

enum site_notification_sex {
    M
    F
}

enum site_common_content_configuration_enable_slug {
    enabled
    disabled
}

enum ez_module_system {
    intranet
    crm
    cms
}

enum site_common_content_configuration_enable_text {
    enabled
    disabled
}

enum site_contact_status {
    Lida
    N_o_lida    @map("Não lida")
    N_o_enviada @map("Não enviada")
    Respondida
}

enum site_place_request_status {
    Lida
    N_o_lida    @map("Não lida")
    N_o_enviada @map("Não enviada")
    Respondida
}

enum site_common_content_configuration_enable_image {
    enabled
    disabled
}

enum site_contact_area {
    Contato
    Trabalhe_conosco @map("Trabalhe conosco")
    Patrocinio
}

enum site_time_suggestion_status {
    Lida
    N_o_lida    @map("Não lida")
    N_o_enviada @map("Não enviada")
    Respondida
}

enum site_common_content_configuration_enable_archive {
    enabled
    disabled
}

enum site_common_content_configuration_enable_link {
    enabled
    disabled
}

enum site_associate_status {
    Lida
    N_o_lida    @map("Não lida")
    N_o_enviada @map("Não enviada")
    Respondida
}

enum site_common_content_configuration_enable_status {
    enabled
    disabled
}

enum site_common_content_configuration_enable_gallery {
    enabled
    disabled
}

enum site_common_content_configuration_enable_videos {
    enabled
    disabled
}

enum site_common_content_configuration_enable_edit {
    enabled
    disabled
}

enum site_common_content_configuration_enable_delete {
    enabled
    disabled
}
